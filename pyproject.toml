[build-system]
requires = ["setuptools >= 61.0.0"]
build-backend = "setuptools.build_meta"

[project]
name = "YOUR_PACKAGE_NAME"  # Type your package name
version = "0.1.0"
description = "YOUR_PACKAGE_DESCRIPTION"  # Type your package description
requires-python = ">= 3.11"  # Type your Python version
license = { file = "LICENSE" }
dependencies = [  # Type your dependencies
    "gymnasium",
    "tensorboard",
    "wandb",
    "tyro",
]

[project.optional-dependencies]
dev = [  # Recommended development dependencies
    "black",
    "ruff",
    "pre-commit",
    "pytest",
]

[tool.setuptools.packages.find]
include = ["YOUR_PACKAGE_NAME"]  # Type your package name


[tool.black]
target-version = ["py311"]  # Type your Python version
line-length = 100
skip-magic-trailing-comma = false

[tool.ruff]
target-version = "py311"  # Type your Python version
line-length = 100
indent-width = 4

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false

[tool.ruff.lint]
preview = true
select = [
    "F",  # pyflakes
    "E",  # pycodestyle
    "W",  # pycodestyle
    "I",  # isort
    "UP",  # pyupgrade
    "ANN",  # flake8-annotations
    "A",  # flake8-builtins
    "C4",  # flake8-comprehensions
    "G",  # flake8-logging-format
    "Q",  # flake8-quotes
    "SLF",  # flake8-self
    "SIM",  # flake8-simplify
    "TCH",  # flake8-tidy-imports
    "PD",  # flake8-pandas
    "RUF",  # ruff-specific-rules
]
ignore = [
    "ANN002",  # missing-type-args
    "ANN003",  # missing-type-kwargs
    "ANN204",  # missing-return-type-special-method
    "ANN401",  # any-type
    "UP038",  # non-pep604-isinstance
]

[tool.ruff.lint.flake8-annotations]
mypy-init-return = true